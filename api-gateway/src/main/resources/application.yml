server:
  port: 8093

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=0
            - AddRequestHeader=X-Forwarded-Host, localhost
            - AddRequestHeader=X-Forwarded-Proto, http
            - AddRequestHeader=X-Forwarded-Prefix, /api
            - DedupeResponseHeader=Authorization
            - PreserveHostHeader

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/techgear
        registration:
          keycloak:
            provider: keycloak
            client-id: techgear-client
            client-secret: SjsmyTNP8TX3QkYNf3woG2GtxaCCUWDe
            authorization-grant-type: password
            scope:
              - openid
              - profile
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/techgear
          jwk-set-uri: http://keycloak:8080/realms/techgear/protocol/openid-connect/certs

eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.web: INFO
    reactor.netty: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.springframework.security.oauth2.jwt: INFO
    org.springframework.security.web.server: INFO