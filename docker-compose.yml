version: "3.9"
services:

  eureka:
    container_name: eureka
    build: ./eureka-server
    hostname: serviceregistry
    ports:
      - "8761:8761"
    image: hamzabox/eureka
    environment:
      - eureka.client.serviceUrl.defaultZone=http://serviceregistry:8761/eureka/

  config-server:
    container_name: config-server
    build: ./demoConfigServer
    ports:
      - "8888:8888"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS=classpath:/config
    depends_on:
      - eureka

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    image: hamzabox/apigateway
    ports:
      - "8093:8093"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://serviceregistry:8761/eureka/
    depends_on:
      - eureka
      - config-server

  user-service:
    container_name: user
    build: ./user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/userDB?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/techgear
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/techgear/protocol/openid-connect/certs
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      - eureka
      - db-mysql
      - keycloak
      - config-server

  order-service:
    container_name: order
    build: ./order-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/orderDB?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    image: hamzabox/orderms
    depends_on:
      - eureka
      - db-mysql
      - config-server

  product-service:
    container_name: product
    build: ./product-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/productDB?createDatabaseIfNotExist=true&userSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      - eureka
      - db-mysql
      - config-server

  delivery-service:
    container_name: delivery
    build: ./delivery-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db-mysql:3306/Delivery?createDatabaseIfNotExist=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      - eureka
      - db-mysql
      - config-server

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL=jdbc:mysql://db-mysql:3306/keycloak?createDatabaseIfNotExist=true
      - KC_DB_USERNAME=root
      - KC_DB_PASSWORD=root
      - KC_HOSTNAME=localhost
    command: 
      - start-dev
      - --http-port=8080
      - --hostname-strict=false
      - --hostname-strict-https=false
    ports:
      - "8080:8080"
    depends_on:
      - db-mysql
    restart: unless-stopped

  db-mysql:
    image: "mysql:8.0"
    container_name: db-mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=keycloak
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: unless-stopped

volumes:
  mysql-data:









